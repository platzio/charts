images:
  frontend:
    repository: platzio/frontend
    tag: v0.3.0-beta.1
    pullPolicy: IfNotPresent
  backend:
    repository: platzio/backend
    tag: v0.3.0-beta.3
    pullPolicy: IfNotPresent
  helm:
    repository: platzio/base
    tag: v3

api:
  enabledVersions:
    - v1
    - v2
  oidc:
    serverUrl:
      valueFrom:
        secretKeyRef:
          name: oidc-config
          key: serverUrl
    clientId:
      valueFrom:
        secretKeyRef:
          name: oidc-config
          key: clientId
    clientSecret:
      valueFrom:
        secretKeyRef:
          name: oidc-config
          key: clientSecret
  resources: {}
  replicaCount: 1
  serviceAccount:
    name: platz-api
    annotations: {}
  service:
    type: ClusterIP
    port: 80
    containerPort: 3000

chartDiscovery:
  ecr:
    queueName: ""
    regionName: ""
  resources: {}
  replicaCount: 1
  serviceAccount:
    name: platz-chart-discovery
    annotations: {}

resourceSync:
  resources: {}
  replicaCount: 1
  serviceAccount:
    name: platz-resource-sync
    annotations: {}

statusUpdates:
  resources: {}
  replicaCount: 1
  serviceAccount:
    name: platz-status-updates
    annotations: {}

k8sAgents:
  - name: default
    resources: {}
    serviceAccount:
      name: ""
      annotations: {}

frontend:
  resources: {}
  replicaCount: 1
  service:
    type: ClusterIP
    port: 80
    containerPort: 80
  serviceAccount:
    name: platz-frontend
    annotations: {}

postgresql:
  enabled: true
  nameOverride: postgresql
  auth:
    username: platz
    password: platz
    database: platz

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

podAnnotations: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts: []
  tls: []

nodeSelector: {}

tolerations: []

affinity: {}
