images:
  frontend:
    repository: platzio/frontend
    tag: v0.4.0
    pullPolicy: IfNotPresent
  backend:
    repository: platzio/backend
    tag: v0.4.2
    pullPolicy: IfNotPresent
  helm:
    repository: platzio/base
    tag: v3

auth:
  adminEmails: []
  oidc:
    serverUrl:
      valueFrom:
        secretKeyRef:
          name: oidc-config
          key: serverUrl
    clientId:
      valueFrom:
        secretKeyRef:
          name: oidc-config
          key: clientId
    clientSecret:
      valueFrom:
        secretKeyRef:
          name: oidc-config
          key: clientSecret

api:
  enabledVersions:
    - v1
    - v2
  resources:
    requests:
      cpu: 100m
      memory: 64Mi
    limits:
      memory: 512Mi
  replicaCount: 1
  serviceAccount:
    name: platz-api
    annotations: {}
  service:
    type: ClusterIP
    port: 80
    containerPort: 3000

chartDiscovery:
  ecr:
    queueName: ""
    regionName: ""
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      memory: 256Mi
  replicaCount: 1
  serviceAccount:
    name: platz-chart-discovery
    annotations: {}

resourceSync:
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      memory: 256Mi
  replicaCount: 1
  serviceAccount:
    name: platz-resource-sync
    annotations: {}

statusUpdates:
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      memory: 256Mi
  replicaCount: 1
  serviceAccount:
    name: platz-status-updates
    annotations: {}

k8sAgents:
  - name: default
    resources:
      requests:
        cpu: 100m
        memory: 128Mi
      limits:
        memory: 256Mi
    serviceAccount:
      name: ""
      annotations: {}

frontend:
  resources:
    requests:
      cpu: 50m
      memory: 64Mi
    limits:
      memory: 128Mi
  replicaCount: 1
  service:
    type: ClusterIP
    port: 80
    containerPort: 80
  serviceAccount:
    name: platz-frontend
    annotations: {}

postgresql:
  enabled: true
  nameOverride: postgresql
  auth:
    username: platz
    password: platz
    database: platz

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""
ownUrlOverride: ""

podAnnotations: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

ingress:
  enabled: false
  className: ""
  annotations: {}
  rules:
    - host: ""
      paths:
        - path: /
          pathType: Prefix
  tls: []

certManager:
  certificate:
    create: false
  issuer:
    create: false
    name: ""
    email: ""
    kind: Issuer
    group: cert-manager.io

nodeSelector: {}

tolerations: []

affinity: {}
